{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","isReversed","sortBy","goodsFromServer","this","visibleGoods","sort","g1","g2","length","reverse","className","onClick","setState","type","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yPASaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,GAHZ,EAMEC,gBAAkB,CAChB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAhBJ,4CAmBE,WAAU,IAAD,OACCF,EAAeG,KAAKJ,MAApBC,WACFI,EAAY,YAAOD,KAAKD,iBAqC9B,OAd0B,IAAtBC,KAAKJ,MAAME,QACbG,EAAaC,OAGW,IAAtBF,KAAKJ,MAAME,QACbG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,OAASD,EAAGC,UAItBR,GACFI,EAAaK,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WAhCf,EAAKC,SAAS,CAAEX,OAAQ,KAmClBY,KAAK,SACLH,UACwB,IAAtBP,KAAKJ,MAAME,OACP,iBACA,0BARR,iCAcA,wBACEU,QAAS,WA1Cf,EAAKC,SAAS,CAAEX,OAAQ,KA6ClBY,KAAK,SACLH,UACwB,IAAtBP,KAAKJ,MAAME,OACP,oBACA,6BARR,4BAcA,wBACEU,QAAS,WAlEf,EAAKC,UAAS,SAAAb,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAoEfa,KAAK,SACLH,WAC4B,IAA1BP,KAAKJ,MAAMC,WACP,oBACA,6BARR,qBAeGG,KAAKJ,MAAME,OAAS,IAA+B,IAA1BE,KAAKJ,MAAMC,WAEjC,wBACEW,QAAS,WArErB,EAAKC,SAAS,CACZZ,YAAY,EACZC,OAAQ,KAsEEY,KAAK,SACLH,UAAU,4BALZ,mBAUC,MAIT,6BACGN,EAAaU,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,gBAzHxD,GAAyBC,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.783aaa7a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\ntype State = {\n  isReversed: boolean,\n  sortBy: number\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortBy: 0,\n  };\n\n  goodsFromServer = [\n    'Dumplings',\n    'Carrot',\n    'Eggs',\n    'Ice cream',\n    'Apple',\n    'Bread',\n    'Fish',\n    'Honey',\n    'Jam',\n    'Garlic',\n  ];\n\n  render() {\n    const { isReversed } = this.state;\n    const visibleGoods = [...this.goodsFromServer];\n\n    const reverse = () => {\n      this.setState(state => ({\n        isReversed: !state.isReversed,\n      }));\n    };\n\n    const sortedAlphabetically = () => {\n      this.setState({ sortBy: 1 });\n    };\n\n    const sortedLength = () => {\n      this.setState({ sortBy: 2 });\n    };\n\n    const reset = () => {\n      this.setState({\n        isReversed: false,\n        sortBy: 0,\n      });\n    };\n\n    if (this.state.sortBy === 1) {\n      visibleGoods.sort();\n    }\n\n    if (this.state.sortBy === 2) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              sortedAlphabetically();\n            }}\n            type=\"button\"\n            className={\n              this.state.sortBy === 1\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => {\n              sortedLength();\n            }}\n            type=\"button\"\n            className={\n              this.state.sortBy === 2\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => {\n              reverse();\n            }}\n            type=\"button\"\n            className={\n              this.state.isReversed === true\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n          >\n            Reverse\n          </button>\n\n          {\n            (this.state.sortBy > 0 || this.state.isReversed === true)\n              ? (\n                <button\n                  onClick={() => {\n                    reset();\n                  }}\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                >\n                  Reset\n                </button>\n              )\n              : ('')\n          }\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => <li data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}