{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortBy","NONE","this","visibleGoods","ALPHABET","sort","LENGTH","good1","good2","length","reverse","className","onClick","setState","type","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAuBKA,E,iGAlBCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQL,EAASM,MAHrB,4CAME,WAAU,IAAD,OACCF,EAAeG,KAAKJ,MAApBC,WACFI,EAAY,UAAOP,GAqCzB,OAdIM,KAAKJ,MAAME,SAAWL,EAASS,UACjCD,EAAaE,OAGXH,KAAKJ,MAAME,SAAWL,EAASW,QACjCH,EAAaE,MAAK,SAACE,EAAOC,GACxB,OAAOD,EAAME,OAASD,EAAMC,UAI5BV,GACFI,EAAaO,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAjCqB,WAC3B,EAAKC,SAAS,CAAEb,OAAQL,EAASS,YAiC3BU,KAAK,SACLH,UAAWI,IACT,CACE,0BACEb,KAAKJ,MAAME,SAAWL,EAASS,UAEnC,CACE,iBACEF,KAAKJ,MAAME,SAAWL,EAASS,WAVvC,iCAiBA,wBACEQ,QA9Ca,WACnB,EAAKC,SAAS,CAAEb,OAAQL,EAASW,UA8C3BQ,KAAK,SACLH,UAAWI,IACT,CACE,6BACEb,KAAKJ,MAAME,SAAWL,EAASW,QAEnC,CACE,oBACEJ,KAAKJ,MAAME,SAAWL,EAASW,SAVvC,4BAiBA,wBACEM,QAzEQ,WACd,EAAKC,UAAS,SAAAf,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAwEfe,KAAK,SACLH,UAAWI,IACT,CACE,8BAAwD,IAA1Bb,KAAKJ,MAAMC,YAE3C,CACE,qBAA+C,IAA1BG,KAAKJ,MAAMC,aARtC,sBAgBGG,KAAKJ,MAAME,SAAWL,EAASM,OACD,IAA1BC,KAAKJ,MAAMC,aAEZ,wBACEa,QA9EA,WACZ,EAAKC,SAAS,CACZd,YAAY,EACZC,OAAQL,EAASM,QA4EPa,KAAK,SACLH,UAAU,4BAHZ,sBAWR,6BACGR,EAAaa,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,gBAjHxD,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.99ed4161.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isReversed: boolean,\n  sortBy: SortType\n};\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortBy: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    const reverse = () => {\n      this.setState(state => ({\n        isReversed: !state.isReversed,\n      }));\n    };\n\n    const sortedAlphabetically = () => {\n      this.setState({ sortBy: SortType.ALPHABET });\n    };\n\n    const sortedLength = () => {\n      this.setState({ sortBy: SortType.LENGTH });\n    };\n\n    const reset = () => {\n      this.setState({\n        isReversed: false,\n        sortBy: SortType.NONE,\n      });\n    };\n\n    if (this.state.sortBy === SortType.ALPHABET) {\n      visibleGoods.sort();\n    }\n\n    if (this.state.sortBy === SortType.LENGTH) {\n      visibleGoods.sort((good1, good2) => {\n        return good1.length - good2.length;\n      });\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={sortedAlphabetically}\n            type=\"button\"\n            className={classNames(\n              {\n                'button is-info is-light':\n                  this.state.sortBy !== SortType.ALPHABET,\n              },\n              {\n                'button is-info':\n                  this.state.sortBy === SortType.ALPHABET,\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={sortedLength}\n            type=\"button\"\n            className={classNames(\n              {\n                'button is-success is-light':\n                  this.state.sortBy !== SortType.LENGTH,\n              },\n              {\n                'button is-success':\n                  this.state.sortBy === SortType.LENGTH,\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={reverse}\n            type=\"button\"\n            className={classNames(\n              {\n                'button is-warning is-light': this.state.isReversed === false,\n              },\n              {\n                'button is-warning': this.state.isReversed === true,\n              },\n            )}\n          >\n            Reverse\n          </button>\n\n          {\n            (this.state.sortBy !== SortType.NONE\n              || this.state.isReversed === true)\n              && (\n                <button\n                  onClick={reset}\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => <li data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}